{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UDayshy\\\\Downloads\\\\Appiness_assignment-main\\\\Appiness_assignment-main\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\nimport { connect } from 'react-redux';\nimport renderField from './renderField';\nimport { reduxForm, Field, SubmissionError, reset, FieldArray, formValueSelector } from 'redux-form';\nimport validate from './ValidateLogin';\nimport { ToastsContainer, ToastsStore, toast, ToastsContainerPosition } from 'react-toasts';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport { isAuth } from '../utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: isAuth()\n    };\n  }\n\n  submitForm(values) {\n    this.props.history.push('/dashboard');\n    console.log(values);\n\n    if (values.userName == \"hruday@gmail.com\" && values.password == \"hruday123\") {\n      var dt = {};\n      dt.userName = values.userName;\n      dt.password = values.password;\n      localStorage.setItem(\"assignmentUser\", dt);\n    } else {\n      ToastsStore.error('Wrong credentials');\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      submitting\n    } = this.props;\n    const {\n      auth\n    } = this.state; //alert(auth);\n\n    if (auth) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(this.submitForm.bind(this)),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"appiness\",\n            children: \" appiness \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"formDiv\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"userName\",\n              component: renderField,\n              type: \"text\",\n              className: \"inputDiv\",\n              label: \"USER NAME\",\n              placeholder: \"Eg. John\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              component: renderField,\n              type: \"password\",\n              className: \"inputDiv\",\n              label: \"PASSWORD\",\n              placeholder: \"Eg. John\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: submitting,\n              className: \"mybutton\",\n              children: [\"LOGIN\", submitting && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-spinner fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 112\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nLogin = reduxForm({\n  form: 'Login',\n  destroyOnUnmount: false,\n  validate\n})(Login); // export default Login;\n\nexport default _c = withRouter(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/UDayshy/Downloads/Appiness_assignment-main/Appiness_assignment-main/src/components/Login.js"],"names":["React","Component","connect","renderField","reduxForm","Field","SubmissionError","reset","FieldArray","formValueSelector","validate","ToastsContainer","ToastsStore","toast","ToastsContainerPosition","Route","Redirect","withRouter","isAuth","Login","constructor","props","state","auth","submitForm","values","history","push","console","log","userName","password","dt","localStorage","setItem","error","render","handleSubmit","pristine","submitting","bind","form","destroyOnUnmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,eAA3B,EAA4CC,KAA5C,EAAmDC,UAAnD,EAA+DC,iBAA/D,QAAwF,YAAxF;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,EAAsCC,KAAtC,EAA4CC,uBAA5C,QAA0E,cAA1E;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAAQC,MAAR,QAAqB,cAArB;;;AACA,MAAMC,KAAN,SAAoBlB,SAApB,CAA8B;AAE1BmB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAACL,MAAM;AADF,KAAb;AAMD;;AACDM,EAAAA,UAAU,CAACC,MAAD,EAAQ;AAChB,SAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AACA,QAAGA,MAAM,CAACK,QAAP,IAAmB,kBAAnB,IAAyCL,MAAM,CAACM,QAAP,IAAmB,WAA/D,EAA2E;AACvE,UAAIC,EAAE,GAAG,EAAT;AACAA,MAAAA,EAAE,CAACF,QAAH,GAAcL,MAAM,CAACK,QAArB;AACAE,MAAAA,EAAE,CAACD,QAAH,GAAcN,MAAM,CAACM,QAArB;AACcE,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAsCF,EAAtC;AACjB,KALD,MAMI;AACFpB,MAAAA,WAAW,CAACuB,KAAZ,CAAkB,mBAAlB;AACD;AAEJ;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,YAAD;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA;AAAzB,QAAuC,KAAKlB,KAAlD;AACA,UAAM;AAACE,MAAAA;AAAD,QAAS,KAAKD,KAApB,CAFO,CAGP;;AACA,QAAGC,IAAH,EAAQ;AACJ,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBAEQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAES;AAAM,QAAA,QAAQ,EAAEc,YAAY,CAAC,KAAKb,UAAL,CAAgBgB,IAAhB,CAAqB,IAArB,CAAD,CAA5B;AAAA,+BAEF;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEC;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCAEA,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,SAAS,EAAErC,WAFb;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,SAAS,EAAC,UAJZ;AAKE,cAAA,KAAK,EAAC,WALR;AAME,cAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,oBAFA,eAeF,QAAC,KAAD;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,SAAS,EAAEA,WAFf;AAGI,cAAA,IAAI,EAAC,UAHT;AAII,cAAA,SAAS,EAAC,UAJd;AAKI,cAAA,KAAK,EAAC,UALV;AAMI,cAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA,oBAfE,eAuBA;AAAA;AAAA;AAAA;AAAA,oBAvBA,eAwBE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,QAAQ,EAAEoC,UAAhC;AAA4C,cAAA,SAAS,EAAC,UAAtD;AAAA,kCAAuEA,UAAU,iBAAI;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAArF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFE;AAAA;AAAA;AAAA;AAAA;AAFT;AAAA;AAAA;AAAA;AAAA,YAFR;AAwCD;;AAzEuB;;AA6E9BpB,KAAK,GAAGf,SAAS,CAAC;AACdqC,EAAAA,IAAI,EAAE,OADQ;AAEdC,EAAAA,gBAAgB,EAAE,KAFJ;AAGdhC,EAAAA;AAHc,CAAD,CAAT,CAIHS,KAJG,CAAR,C,CAKA;;AACA,oBAAeF,UAAU,CAACE,KAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport './Login.css';\nimport { connect } from 'react-redux';\nimport renderField from './renderField';\nimport { reduxForm, Field, SubmissionError, reset, FieldArray, formValueSelector } from 'redux-form';\nimport validate from './ValidateLogin';\nimport {ToastsContainer, ToastsStore, toast,ToastsContainerPosition} from 'react-toasts';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\nimport {isAuth} from '../utilities';\nclass Login extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            auth:isAuth(),\n        };\n\n    \n      \n      }\n      submitForm(values){\n        this.props.history.push('/dashboard');\n          console.log(values);\n          if(values.userName == \"hruday@gmail.com\" && values.password == \"hruday123\"){\n              var dt = {};\n              dt.userName = values.userName;\n              dt.password = values.password;\n                            localStorage.setItem(\"assignmentUser\",dt);\n          }\n          else{\n            ToastsStore.error('Wrong credentials');\n          }\n      \n      }\n      render() {\n        const {handleSubmit, pristine, submitting} = this.props;\n        const {auth} = this.state;\n        //alert(auth);\n        if(auth){\n            return <Redirect to='/dashboard'/>\n        }\n        return(\n          \n                <div className=\"mainForm\">\n                   \n                         <form onSubmit={handleSubmit(this.submitForm.bind(this))}>\n                           \n                       <div className=\"loginBlock\">\n                         <button className=\"appiness\"> appiness </button>\n                        <div className=\"formDiv\">\n                    \n                        <Field \n                          name=\"userName\"\n                          component={renderField}\n                          type=\"text\"\n                          className=\"inputDiv\"\n                          label=\"USER NAME\"\n                          placeholder=\"Eg. John\"\n                        />\n                        {/* <label>User Name</label>\n                        <div className=\"inputDiv\"> \n                        \n                     <input className=\"customInput\" type=\"text\"/>\n                     </div> */}\n                      <Field\n                          name=\"password\"\n                          component={renderField}\n                          type=\"password\"\n                          className=\"inputDiv\"\n                          label=\"PASSWORD\"\n                          placeholder=\"Eg. John\"\n                        />\n                        <br/>\n                          <button type=\"submit\" disabled={submitting} className=\"mybutton\">LOGIN{submitting && <i className=\"fa fa-spinner fa-spin\"></i>}</button>\n                     </div>\n                   \n                    </div>\n                 \n                    </form>\n                </div>\n        )\n      }\n\n}\n\nLogin = reduxForm({\n    form: 'Login',\n    destroyOnUnmount: false,\n    validate\n  })(Login)\n// export default Login;\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}